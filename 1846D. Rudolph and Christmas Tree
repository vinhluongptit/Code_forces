#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
using ll = long long;
const int mod = 1e9 + 7;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;


int main() {
	int t;
	cin >> t;
	while(t--){
		double ans = 0;
		double n, d, h;
		cin >> n >> d >> h;
		vector<double> v(n);
		for(int i = 0; i < n; i++){
			cin >> v[i];
		}
		sort(v.begin(), v.end());
		double area = (h*d) / 2;
		for(int i = 0; i < n; i++){
			ans += area;
			if(i != 0){
				if(v[i] - v[i-1] < h){
					double hi = h - (v[i]-v[i-1]);
					double tmp = (hi)*((d/h)*hi) / 2;
					ans -= tmp;
				}
			}
		}
		cout << fixed << setprecision(6) << ans;
		cout << endl;
	}
}
