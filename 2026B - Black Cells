#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while (t--) {
    	ll n; cin >> n;
    	vector<ll> v(n);
    	for(int i = 0; i < n; i++){
    		cin >> v[i];
		}
		if(n == 1){
			cout << 1 << endl;
			continue;
		}
		ll ans;
		if(n & 1){
			ans = 1e18;
			for(int i = 0; i < n; i++){
				ll tmp = 0;
				for(int j = 0; j < n; j += 2){
					if(j == i){
						j--;
					}else if((j+1) == i){
						tmp = max(tmp, v[j+2]-v[j]);
						j++;
					}else{
						tmp = max(tmp, v[j+1]-v[j]);
					}
				}
				ans = min(ans, tmp);
			}
		}else{
			ans = 0;
			for(int i = 0; i < n; i += 2){
				ans = max(ans, v[i+1]-v[i]);
			}
		}
		cout << ans << endl;
    }
}
