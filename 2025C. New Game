#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;



int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
    int t;
    cin >> t;
    while(t--){
		ll n, k; cin >> n >> k;
		vector<ll> v(n);
		vector<pair<ll,int>> kq;
		ll ans = 0;
		for(int i = 0; i < n; i++){
			cin >> v[i];
		}
		sort(v.begin(), v.end());
		ll tmp = 1;
		for(int i = 1; i < n; i++){
			if(v[i] == v[i-1]){
				tmp++;
			}else{
				kq.push_back({v[i-1], tmp});
				tmp = 1;
			}
		}
		kq.push_back({v[n-1], tmp});
		ll tam = 0;
		ll sl = 1;
		tam = kq[0].second;
		ans = max(ans, tam);
	//	cout << ans << " ";
		for(int i = 1; i < kq.size(); i++){
		//	cout << sl << " ";
			if(kq[i].first != kq[i-1].first+1){
				tam = kq[i].second;
				sl = 1;
				ans = max(ans, tam);
			}else if(sl+1 <= k){
				tam += kq[i].second;
				sl++;
				ans = max(ans, tam);
			}else{
				tam -= kq[i-sl].second;
				tam += kq[i].second;
				ans = max(ans, tam);
			}
		//	cout << ans << " ";
		}
		cout << ans << endl;
	}
}
Â 
