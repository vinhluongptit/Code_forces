#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while (t--) {
    	int n; cin >> n;
    	string s; cin >> s;
    	s = '*'+s;

    	ll ans = 0;
    	deque<ll> dq;
    	for(int i = n; i >= 1; i--){
    		if(s[i] == '1'){
    			dq.push_front(i);
			}else{
				ans += i;
				if(dq.empty()){
					
				}else dq.pop_back();
			}
		}
		while(dq.size() > 1){
			ans += dq.front();
			dq.pop_front();
			dq.pop_back();
		}
		if(!dq.empty()){
			ans += dq.front();
		}
		cout << ans;
		cout << endl;
    }
}
